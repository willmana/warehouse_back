{"version":3,"sources":["services/items.js","components/gloves.js","components/facemasks.js","components/beanies.js","App.js","index.js"],"names":["getGloves","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","this","arguments","getFacemasks","_ref2","_callee2","_context2","services_items","getBeanies","_ref3","_callee3","_context3","Gloves","gloves","filter","showAll","_useSortableData","useSortableData","glove","name","toLowerCase","includes","items","requestSort","sortConfig","react_default","createElement","Table","striped","bordered","hover","variant","Button","type","onClick","className","key","direction","undefined","getClassNamesFor","style","float","map","id","color","length","price","manufacturer","Facemasks","facemasks","mask","Beanies","beanies","beanie","config","_useState","useState","_useState2","slicedToArray","setSortConfig","useMemo","sortableItems","toConsumableArray","sort","b","App","_useState3","_useState4","setGloves","_useState5","_useState6","setBeanies","_useState7","_useState8","setFacemasks","_useState9","_useState10","setFilter","_useState11","_useState12","setShowAll","useEffect","_renderGloves","itemService","_renderFacemasks","_renderBeanies","renderGloves","renderFacemasks","renderBeanies","react_router_dom","Navbar","bg","Brand","as","Link","to","Nav","Form","inline","FormControl","placeholder","value","onChange","event","preventDefault","target","react_router","path","components_gloves","components_facemasks","components_beanies","Jumbotron","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"2UAGMA,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,IAAMC,IAAN,GAAAC,OAHX,OAGW,YADT,cACRP,EADQE,EAAAM,KAAAN,EAAAO,OAAA,SAEPT,EAASU,MAFF,wBAAAR,EAAAS,SAAAZ,MAAH,yBAAAN,EAAAmB,MAAAC,KAAAC,YAAA,GAKTC,EAAY,eAAAC,EAAAtB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAmB,IAAA,IAAAjB,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACMC,IAAMC,IAAN,GAAAC,OARX,OAQW,eADN,cACXP,EADWkB,EAAAV,KAAAU,EAAAT,OAAA,SAEVT,EAASU,MAFC,wBAAAQ,EAAAP,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAUHK,EAAA,CAACC,WALA,eAAAC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAwB,IAAA,IAAAtB,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACQC,IAAMC,IAAN,GAAAC,OAbX,OAaW,aADR,cACTP,EADSuB,EAAAf,KAAAe,EAAAd,OAAA,SAERT,EAASU,MAFD,wBAAAa,EAAAZ,SAAAW,MAAH,yBAAAD,EAAAT,MAAAC,KAAAC,YAAA,GAKYC,eAAcvB,6BCmC3BgC,EAjDA,SAAA/B,GAAkD,IAA/CgC,EAA+ChC,EAA/CgC,OAAQC,EAAuCjC,EAAvCiC,OAAQC,EAA+BlC,EAA/BkC,QAA+BC,GAKlBC,EALkBpC,EAAtBoC,iBACnBF,EACdF,EACAA,EAAOC,OAAO,SAAAI,GAAK,OAAIA,EAAMC,KAAKC,cAAcC,SAASP,EAAOM,kBAE9DE,EALqDN,EAKrDM,MAAOC,EAL8CP,EAK9CO,YAAaC,EALiCR,EAKjCQ,WAQ5B,OACIC,EAAAxC,EAAAyC,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClCN,EAAAxC,EAAAyC,cAAA,aACID,EAAAxC,EAAAyC,cAAA,UACID,EAAAxC,EAAAyC,cAAA,iBAEID,EAAAxC,EAAAyC,cAACM,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAS,kBAAMX,EAAY,SAC7CY,UAdC,SAAChB,GACtB,GAAKK,EAGL,OAAOA,EAAWY,MAAQjB,EAAOK,EAAWa,eAAYC,EAUzBC,CAAiB,QAASC,MAAO,CAACC,MAAO,SAAUV,QAAQ,qBAD1E,iBAKJN,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,4BAGRD,EAAAxC,EAAAyC,cAAA,aACKJ,EAAMoB,IAAI,SAAAxB,GAAK,OACZO,EAAAxC,EAAAyC,cAAA,MAAIU,IAAKlB,EAAMyB,IACXlB,EAAAxC,EAAAyC,cAAA,UAAKR,EAAMC,MACVD,EAAM0B,MAAMC,OAAS,EAChBpB,EAAAxC,EAAAyC,cAAA,UAAKR,EAAM0B,MAAMF,IAAI,SAAAE,GAAK,OACxBnB,EAAAxC,EAAAyC,cAAA,gBAAQkB,EAAR,QACFnB,EAAAxC,EAAAyC,cAAA,UAAKR,EAAM0B,MAAM,GAAjB,KAENnB,EAAAxC,EAAAyC,cAAA,UAAKR,EAAM4B,OACXrB,EAAAxC,EAAAyC,cAAA,UAAKR,EAAM6B,oBCWpBC,EAlDG,SAAAnE,GAAqD,IAAlDoE,EAAkDpE,EAAlDoE,UAAWlC,EAAuClC,EAAvCkC,QAASD,EAA8BjC,EAA9BiC,OAA8BE,GAKxBC,EALwBpC,EAAtBoC,iBACzBF,EACdkC,EACAA,EAAUnC,OAAO,SAAAoC,GAAI,OAAIA,EAAK/B,KAAKC,cAAcC,SAASP,EAAOM,kBAE/DE,EAL2DN,EAK3DM,MAAOC,EALoDP,EAKpDO,YAAaC,EALuCR,EAKvCQ,WAQ5B,OACIC,EAAAxC,EAAAyC,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClCN,EAAAxC,EAAAyC,cAAA,aACID,EAAAxC,EAAAyC,cAAA,UACID,EAAAxC,EAAAyC,cAAA,iBAEID,EAAAxC,EAAAyC,cAACM,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAS,kBAAMX,EAAY,SAC7CY,UAdC,SAAChB,GACtB,GAAKK,EAGL,OAAOA,EAAWY,MAAQjB,EAAOK,EAAWa,eAAYC,EAUzBC,CAAiB,QAASC,MAAO,CAAEC,MAAO,SAAWV,QAAQ,qBAD5E,iBAKJN,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,4BAGRD,EAAAxC,EAAAyC,cAAA,aACKJ,EAAMoB,IAAI,SAAAQ,GAAI,OACXzB,EAAAxC,EAAAyC,cAAA,MAAIU,IAAKc,EAAKP,IACVlB,EAAAxC,EAAAyC,cAAA,UAAKwB,EAAK/B,MACT+B,EAAKN,MAAMC,OAAS,EACfpB,EAAAxC,EAAAyC,cAAA,UAAKwB,EAAKN,MAAMF,IAAI,SAAAE,GAAK,OACvBnB,EAAAxC,EAAAyC,cAAA,gBAAQkB,EAAR,QACFnB,EAAAxC,EAAAyC,cAAA,UAAKwB,EAAKN,MAAM,IAGtBnB,EAAAxC,EAAAyC,cAAA,UAAKwB,EAAKJ,OACVrB,EAAAxC,EAAAyC,cAAA,UAAKwB,EAAKH,oBCQnBI,EAhDC,SAAAtE,GAAmD,IAAhDuE,EAAgDvE,EAAhDuE,QAASrC,EAAuClC,EAAvCkC,QAASD,EAA8BjC,EAA9BiC,OAA8BE,GAKpBC,EALoBpC,EAAtBoC,iBACrBF,EACdqC,EACAA,EAAQtC,OAAO,SAAAuC,GAAM,OAAIA,EAAOlC,KAAKC,cAAcC,SAASP,EAAOM,kBAEjEE,EALuDN,EAKvDM,MAAOC,EALgDP,EAKhDO,YAAaC,EALmCR,EAKnCQ,WAQ5B,OACIC,EAAAxC,EAAAyC,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClCN,EAAAxC,EAAAyC,cAAA,aACID,EAAAxC,EAAAyC,cAAA,UACID,EAAAxC,EAAAyC,cAAA,iBAEID,EAAAxC,EAAAyC,cAACM,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAS,kBAAMX,EAAY,SAC7CY,UAdC,SAAChB,GACtB,GAAKK,EAGL,OAAOA,EAAWY,MAAQjB,EAAOK,EAAWa,eAAYC,EAUzBC,CAAiB,QAASC,MAAO,CAAEC,MAAO,SAAWV,QAAQ,qBAD5E,iBAKJN,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,mBACAD,EAAAxC,EAAAyC,cAAA,4BAGRD,EAAAxC,EAAAyC,cAAA,aACKJ,EAAMoB,IAAI,SAAAW,GAAM,OACb5B,EAAAxC,EAAAyC,cAAA,MAAIU,IAAKiB,EAAOV,IACZlB,EAAAxC,EAAAyC,cAAA,UAAK2B,EAAOlC,MACXkC,EAAOT,MAAMC,OAAS,EACjBpB,EAAAxC,EAAAyC,cAAA,UAAK2B,EAAOT,MAAMF,IAAI,SAAAE,GAAK,OACzBnB,EAAAxC,EAAAyC,cAAA,gBAAQkB,EAAR,QACFnB,EAAAxC,EAAAyC,cAAA,UAAK2B,EAAOT,MAAM,IACxBnB,EAAAxC,EAAAyC,cAAA,UAAK2B,EAAOP,OACZrB,EAAAxC,EAAAyC,cAAA,UAAK2B,EAAON,oBCzB9B9B,SAAkB,SAACK,GAAyB,IAAlBgC,EAAkBpD,UAAA2C,OAAA,QAAAP,IAAApC,UAAA,GAAAA,UAAA,GAAT,KAASqD,EACZC,mBAASF,GADGG,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GACzC/B,EADyCiC,EAAA,GAC7BE,EAD6BF,EAAA,GA0BhD,MAAO,CAAEnC,MAxBWsC,kBAAQ,WAC1B,IAAIC,EAAa/E,OAAAgF,EAAA,EAAAhF,CAAOwC,GAYxB,OAXmB,OAAfE,GACFqC,EAAcE,KAAK,SAAC9E,EAAG+E,GACrB,OAAI/E,EAAEuC,EAAWY,KAAO4B,EAAExC,EAAWY,KACH,cAAzBZ,EAAWa,WAA6B,EAAI,EAEjDpD,EAAEuC,EAAWY,KAAO4B,EAAExC,EAAWY,KACH,cAAzBZ,EAAWa,UAA4B,GAAK,EAE9C,IAGJwB,GACN,CAACvC,EAAOE,IAUkBD,YART,SAAAa,GAClB,IAAIC,EAAY,YACZb,GAAcA,EAAWY,MAAQA,GAAgC,cAAzBZ,EAAWa,YACrDA,EAAY,cAEdsB,EAAc,CAAEvB,MAAKC,kBAkFV4B,EA5EH,WAAM,IAAAC,EACYV,mBAAS,IADrBW,EAAArF,OAAA4E,EAAA,EAAA5E,CAAAoF,EAAA,GACTrD,EADSsD,EAAA,GACDC,EADCD,EAAA,GAAAE,EAEcb,mBAAS,IAFvBc,EAAAxF,OAAA4E,EAAA,EAAA5E,CAAAuF,EAAA,GAETjB,EAFSkB,EAAA,GAEAC,EAFAD,EAAA,GAAAE,EAGkBhB,mBAAS,IAH3BiB,EAAA3F,OAAA4E,EAAA,EAAA5E,CAAA0F,EAAA,GAGTvB,EAHSwB,EAAA,GAGEC,EAHFD,EAAA,GAAAE,EAIYnB,mBAAS,IAJrBoB,EAAA9F,OAAA4E,EAAA,EAAA5E,CAAA6F,EAAA,GAIT7D,EAJS8D,EAAA,GAIDC,EAJCD,EAAA,GAAAE,EAKctB,oBAAS,GALvBuB,EAAAjG,OAAA4E,EAAA,EAAA5E,CAAAgG,EAAA,GAKT/D,EALSgE,EAAA,GAKAC,EALAD,EAAA,GAiChB,OAnBAE,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAApG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KACd,SAAAC,IAAA,IAAAW,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqB2F,EAAYvG,YADjC,OACQkB,EADRR,EAAAM,KAEEwE,EAAUtE,GAFZ,wBAAAR,EAAAS,SAAAZ,OADca,MAAAC,KAAAC,WAAA,SAAAkF,IAAA,OAAAA,EAAAtG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAKd,SAAAmB,IAAA,IAAAP,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACqB2F,EAAYhF,eADjC,OACQL,EADRQ,EAAAV,KAEE8E,EAAa5E,GAFf,wBAAAQ,EAAAP,SAAAM,OALcL,MAAAC,KAAAC,WAAA,SAAAmF,IAAA,OAAAA,EAAAvG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KASd,SAAAwB,IAAA,IAAAZ,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACqB2F,EAAY3E,aADjC,OACQV,EADRa,EAAAf,KAEE2E,EAAWzE,GAFb,wBAAAa,EAAAZ,SAAAW,OATcV,MAAAC,KAAAC,YAAA,WAAAgF,EAAAlF,MAAAC,KAAAC,WAadoF,GAbc,WAAAF,EAAApF,MAAAC,KAAAC,WAcdqF,GAdc,WAAAF,EAAArF,MAAAC,KAAAC,WAedsF,IACC,IAID/D,EAAAxC,EAAAyC,cAAC+D,EAAA,EAAD,KACEhE,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACgE,EAAA,EAAD,CAAQC,GAAG,OAAO5D,QAAQ,QACxBN,EAAAxC,EAAAyC,cAACgE,EAAA,EAAOE,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KAA3B,QACAtE,EAAAxC,EAAAyC,cAACsE,EAAA,EAAD,CAAK7D,UAAU,WACbV,EAAAxC,EAAAyC,cAACsE,EAAA,EAAIF,KAAL,CAAUD,GAAIC,IAAMC,GAAG,WAAvB,UACAtE,EAAAxC,EAAAyC,cAACsE,EAAA,EAAIF,KAAL,CAAUD,GAAIC,IAAMC,GAAG,cAAvB,aACAtE,EAAAxC,EAAAyC,cAACsE,EAAA,EAAIF,KAAL,CAAUD,GAAIC,IAAMC,GAAG,YAAvB,YAEFtE,EAAAxC,EAAAyC,cAACuE,EAAA,EAAD,CAAMC,QAAM,GACVzE,EAAAxC,EAAAyC,cAACyE,EAAA,EAAD,CAAalE,KAAK,OAAOmE,YAAY,SAASjE,UAAU,UAAUkE,MAAOvF,EAAQwF,SArChE,SAACC,GAC1BA,EAAMC,iBACN3B,EAAU0B,EAAME,OAAOJ,OACK,KAAxBE,EAAME,OAAOJ,MAAgBrB,GAAW,GACvCA,GAAW,SAsCdvD,EAAAxC,EAAAyC,cAACgF,EAAA,EAAD,KACEjF,EAAAxC,EAAAyC,cAACgF,EAAA,EAAD,CAAOC,KAAK,WACVlF,EAAAxC,EAAAyC,cAACkF,EAAD,CAAQ/F,OAAQA,EAAQC,OAAQA,EAAQC,QAASA,EAASE,gBAAiBA,KAE7EQ,EAAAxC,EAAAyC,cAACgF,EAAA,EAAD,CAAOC,KAAK,cACVlF,EAAAxC,EAAAyC,cAACmF,EAAD,CAAW5D,UAAWA,EAAWnC,OAAQA,EAAQC,QAASA,EAASE,gBAAiBA,KAEtFQ,EAAAxC,EAAAyC,cAACgF,EAAA,EAAD,CAAOC,KAAK,YACVlF,EAAAxC,EAAAyC,cAACoF,EAAD,CAAS1D,QAASA,EAAStC,OAAQA,EAAQC,QAASA,EAASE,gBAAiBA,KAEhFQ,EAAAxC,EAAAyC,cAACgF,EAAA,EAAD,CAAOC,KAAK,KACVlF,EAAAxC,EAAAyC,cAACqF,EAAA,EAAD,KACEtF,EAAAxC,EAAAyC,cAAA,mCACAD,EAAAxC,EAAAyC,cAAA,+cCvGZsF,IAASC,OACPxF,EAAAxC,EAAAyC,cAACD,EAAAxC,EAAMiI,WAAP,KACEzF,EAAAxC,EAAAyC,cAACyF,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.2718756f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/get'\r\n\r\nconst getGloves = async () => {\r\n    const response = await axios.get(`${baseUrl}/gloves`)\r\n    return response.data\r\n}\r\n\r\nconst getFacemasks = async () => {\r\n    const response = await axios.get(`${baseUrl}/facemasks`)\r\n    return response.data\r\n}\r\n\r\nconst getBeanies = async () => {\r\n    const response = await axios.get(`${baseUrl}/beanies`)\r\n    return response.data\r\n}\r\n\r\nexport default {getBeanies, getFacemasks, getGloves}","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Gloves = ({ gloves, filter, showAll, useSortableData }) => {\r\n    const itemsToShow = showAll\r\n        ? gloves\r\n        : gloves.filter(glove => glove.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{float: 'right'}} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(glove => (\r\n                    <tr key={glove.id}>\r\n                        <td>{glove.name}</td>\r\n                        {glove.color.length > 1\r\n                            ? <td>{glove.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{glove.color[0]} </td>\r\n                        }\r\n                        <td>{glove.price}</td>\r\n                        <td>{glove.manufacturer}</td>\r\n                    </tr>)\r\n                )\r\n\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Gloves","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Facemasks = ({ facemasks, showAll, filter, useSortableData }) => {\r\n    const itemsToShow = showAll\r\n        ? facemasks\r\n        : facemasks.filter(mask => mask.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{ float: 'right' }} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(mask => (\r\n                    <tr key={mask.id}>\r\n                        <td>{mask.name}</td>\r\n                        {mask.color.length > 1\r\n                            ? <td>{mask.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{mask.color[0]}</td>\r\n                        }\r\n\r\n                        <td>{mask.price}</td>\r\n                        <td>{mask.manufacturer}</td>\r\n                    </tr>)\r\n                )\r\n\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Facemasks","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Beanies = ({ beanies, showAll, filter, useSortableData }) => {\r\n    const itemsToShow = showAll\r\n        ? beanies\r\n        : beanies.filter(beanie => beanie.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{ float: 'right' }} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(beanie => (\r\n                    <tr key={beanie.id}>\r\n                        <td>{beanie.name}</td>\r\n                        {beanie.color.length > 1\r\n                            ? <td>{beanie.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{beanie.color[0]}</td>}\r\n                        <td>{beanie.price}</td>\r\n                        <td>{beanie.manufacturer}</td>\r\n                    </tr>)\r\n                )\r\n\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Beanies","import React, { useState, useEffect, useMemo } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport itemService from './services/items'\nimport Gloves from './components/gloves'\nimport Facemasks from './components/facemasks'\nimport Beanies from './components/beanies'\nimport './App.css';\n\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  }\n\n  return { items: sortedItems, requestSort };\n}\n\nconst App = () => {\n  const [gloves, setGloves] = useState([])\n  const [beanies, setBeanies] = useState([])\n  const [facemasks, setFacemasks] = useState([])\n  const [filter, setFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n    if (event.target.value === ('')) setShowAll(true)\n    else setShowAll(false)\n  }\n\n  useEffect(() => {\n    async function renderGloves() {\n      const data = await itemService.getGloves()\n      setGloves(data)\n    }\n    async function renderFacemasks() {\n      const data = await itemService.getFacemasks()\n      setFacemasks(data)\n    }\n    async function renderBeanies() {\n      const data = await itemService.getBeanies()\n      setBeanies(data)\n    }\n    renderGloves()\n    renderFacemasks()\n    renderBeanies()\n  }, [])\n\n\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand as={Link} to=\"/\">Home</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/gloves\">Gloves</Nav.Link>\n            <Nav.Link as={Link} to=\"/facemasks\">Facemasks</Nav.Link>\n            <Nav.Link as={Link} to=\"/beanies\">Beanies</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Filter\" className=\"mr-sm-2\" value={filter} onChange={handleFilterChange} />\n\n          </Form>\n        </Navbar>\n      </div>\n      <Switch>\n        <Route path=\"/gloves\">\n          <Gloves gloves={gloves} filter={filter} showAll={showAll} useSortableData={useSortableData}/>\n        </Route>\n        <Route path=\"/facemasks\">\n          <Facemasks facemasks={facemasks} filter={filter} showAll={showAll} useSortableData={useSortableData}/>\n        </Route>\n        <Route path=\"/beanies\">\n          <Beanies beanies={beanies} filter={filter} showAll={showAll} useSortableData={useSortableData}/>\n        </Route>\n        <Route path=\"/\" >\n          <Jumbotron>\n            <h1>Warehouse application</h1>\n            <p>\n              This is a single page application, that fetches clothing products from an API and displays\n              said products in tables. This application doesn't have pagination.\n              It uses react-router so that user is able to switch easily from product category to another. It has built\n              in filtering and user is also able to sort tables by product name. The application should be pretty\n              responsive considering the fact that each product category has almost 8000 items.\n            </p>\n          </Jumbotron>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}