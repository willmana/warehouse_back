{"version":3,"sources":["services/items.js","components/gloves.js","components/facemasks.js","components/beanies.js","services/manufacturer.js","components/glove.js","components/facemask.js","components/beanie.js","App.js","index.js"],"names":["getGloves","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","this","arguments","getFacemasks","_ref2","_callee2","_context2","services_items","getBeanies","_ref3","_callee3","_context3","Gloves","gloves","filter","showAll","_useSortableData","useSortableData","item","name","toLowerCase","includes","items","requestSort","sortConfig","react_default","createElement","Table","striped","bordered","hover","variant","Button","type","onClick","className","key","direction","undefined","getClassNamesFor","style","float","map","id","color","length","price","manufacturer","as","Link","to","Facemasks","facemasks","mask","Beanies","beanies","beanie","services_manufacturer","getData","_x","Glove","parseAvailability","_useState","useState","_useState2","slicedToArray","avail","setAvail","useParams","glove","find","n","json","manufacturerService","flat","fetchAvailability","Facemask","facemask","Beanie","config","setSortConfig","useMemo","sortableItems","toConsumableArray","sort","b","DATAPAYLOAD","App","_useState3","_useState4","setGloves","_useState5","_useState6","setBeanies","_useState7","_useState8","setFacemasks","_useState9","_useState10","setFilter","_useState11","_useState12","setShowAll","useEffect","_renderGloves","itemService","_renderFacemasks","_renderBeanies","renderGloves","renderFacemasks","renderBeanies","react_router_dom","Navbar","bg","Brand","Nav","Form","inline","FormControl","placeholder","value","onChange","event","preventDefault","target","react_router","path","components_glove","components_gloves","components_facemask","components_facemasks","components_beanie","components_beanies","Jumbotron","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a3d292ca.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/get'\r\n\r\nconst getGloves = async () => {\r\n    const response = await axios.get(`${baseUrl}/gloves`)\r\n    return response.data\r\n}\r\n\r\nconst getFacemasks = async () => {\r\n    const response = await axios.get(`${baseUrl}/facemasks`)\r\n    return response.data\r\n}\r\n\r\nconst getBeanies = async () => {\r\n    const response = await axios.get(`${baseUrl}/beanies`)\r\n    return response.data\r\n}\r\n\r\nexport default {getBeanies, getFacemasks, getGloves}","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Gloves = ({ gloves, filter, showAll, useSortableData}) => {\r\n\r\n    const itemsToShow = showAll\r\n        ? gloves\r\n        : gloves.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{ float: 'right' }} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                    <th>Availability</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(item => (\r\n                    <tr key={item.id}>\r\n                        <td>{item.name}</td>\r\n                        {item.color.length > 1\r\n                            ? <td>{item.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{item.color[0]} </td>\r\n                        }\r\n                        <td>{item.price}</td>\r\n                        <td>{item.manufacturer}</td>\r\n                        <td><Button as={Link} to={`/gloves/${item.id}`} variant=\"outline-secondary\"> Check availability</Button></td>\r\n                    </tr>)\r\n                )\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Gloves","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Facemasks = ({ facemasks, showAll, filter, useSortableData }) => {\r\n    const itemsToShow = showAll\r\n        ? facemasks\r\n        : facemasks.filter(mask => mask.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{ float: 'right' }} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                    <th>Availability</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(mask => (\r\n                    <tr key={mask.id}>\r\n                        <td>{mask.name}</td>\r\n                        {mask.color.length > 1\r\n                            ? <td>{mask.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{mask.color[0]}</td>\r\n                        }\r\n\r\n                        <td>{mask.price}</td>\r\n                        <td>{mask.manufacturer}</td>\r\n                        <td><Button as={Link} to={`/facemasks/${mask.id}`} variant=\"outline-secondary\"> Check availability</Button></td>\r\n                    </tr>)\r\n                )\r\n\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Facemasks","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Beanies = ({ beanies, showAll, filter, useSortableData }) => {\r\n    const itemsToShow = showAll\r\n        ? beanies\r\n        : beanies.filter(beanie => beanie.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(itemsToShow);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                        <Button type=\"button\" onClick={() => requestSort('name')}\r\n                            className={getClassNamesFor('name')} style={{ float: 'right' }} variant=\"outline-secondary\">\r\n                            Sort by name\r\n                        </Button>\r\n                    </th>\r\n                    <th>Color</th>\r\n                    <th>Price</th>\r\n                    <th>Manufacturer</th>\r\n                    <th>Availability</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(beanie => (\r\n                    <tr key={beanie.id}>\r\n                        <td>{beanie.name}</td>\r\n                        {beanie.color.length > 1\r\n                            ? <td>{beanie.color.map(color =>\r\n                                <span> {color} </span>)}</td>\r\n                            : <td>{beanie.color[0]}</td>}\r\n                        <td>{beanie.price}</td>\r\n                        <td>{beanie.manufacturer}</td>\r\n                        <td><Button as={Link} to={`/beanies/${beanie.id}`} variant=\"outline-secondary\"> Check availability</Button></td>\r\n                    </tr>)\r\n                )\r\n\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Beanies","import axios from 'axios'\r\nconst baseUrl = '/availability'\r\n\r\nconst getData = async (manufacturer) => {\r\n    const response = await axios.get(`${baseUrl}/${manufacturer}`)\r\n    return response.data\r\n}\r\n\r\n\r\nexport default {getData}","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport manufacturerService from './../services/manufacturer'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n\r\nconst Glove = ({ gloves, parseAvailability }) => {\r\n    const [avail, setAvail] = useState('Waiting for response...')\r\n    const id = useParams().id\r\n    const glove = gloves.find(n => n.id === id)\r\n    const fetchAvailability = async (manufacturer) => {\r\n        const data = await manufacturerService.getData(manufacturer)\r\n        if (data.response !== \"[]\") {\r\n            const json = data.response.flat().find(a => a.id.toLowerCase() === id.toLowerCase())\r\n            setAvail(parseAvailability({ json }))\r\n        } else {\r\n            setAvail('Service currently unavailable')\r\n        }\r\n    }\r\n\r\n    if (glove !== undefined && avail === 'Waiting for response...') {\r\n        fetchAvailability(glove.manufacturer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <td>Glove</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>{glove.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Price</th>\r\n                    <td>{glove.price}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Manufacturer</th>\r\n                    <td>{glove.manufacturer}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Availability</th>\r\n                    <td>{avail}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Glove","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport manufacturerService from './../services/manufacturer'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n\r\nconst Facemask = ({ facemasks, parseAvailability }) => {\r\n    const [avail, setAvail] = useState('Waiting for response...')\r\n    const id = useParams().id\r\n    const facemask = facemasks.find(n => n.id === id)\r\n    const fetchAvailability = async (manufacturer) => {\r\n        const data = await manufacturerService.getData(manufacturer)\r\n        if (data.response !== \"[]\") {\r\n            const json = data.response.flat().find(a => a.id.toLowerCase() === id.toLowerCase())\r\n            setAvail(parseAvailability({ json }))\r\n        } else {\r\n            setAvail('Service currently unavailable')\r\n        }\r\n    }\r\n\r\n    if (facemask !== undefined && avail === 'Waiting for response...') {\r\n        fetchAvailability(facemask.manufacturer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <td>Facemask</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>{facemask.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Price</th>\r\n                    <td>{facemask.price}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Manufacturer</th>\r\n                    <td>{facemask.manufacturer}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Availability</th>\r\n                    <td>{avail}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Facemask","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport manufacturerService from './../services/manufacturer'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n\r\nconst Beanie = ({ beanies, parseAvailability }) => {\r\n    const [avail, setAvail] = useState('Waiting for response...')\r\n    const id = useParams().id\r\n    const beanie = beanies.find(n => n.id === id)\r\n    const fetchAvailability = async (manufacturer) => {\r\n        const data = await manufacturerService.getData(manufacturer)\r\n        if (data.response !== \"[]\") {\r\n            const json = data.response.flat().find(a => a.id.toLowerCase() === id.toLowerCase())\r\n            setAvail(parseAvailability({ json }))\r\n        } else {\r\n            setAvail('Service currently unavailable')\r\n        }\r\n    }\r\n\r\n    if (beanie !== undefined && avail === 'Waiting for response...') {\r\n        fetchAvailability(beanie.manufacturer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <td>Beanie</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>{beanie.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Price</th>\r\n                    <td>{beanie.price}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Manufacturer</th>\r\n                    <td>{beanie.manufacturer}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Availability</th>\r\n                    <td>{avail}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Beanie","import React, { useState, useEffect, useMemo } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport itemService from './services/items'\nimport Gloves from './components/gloves'\nimport Facemasks from './components/facemasks'\nimport Beanies from './components/beanies'\nimport Glove from './components/glove'\nimport Facemask from './components/facemask'\nimport Beanie from './components/beanie'\nimport './App.css';\n// import manufacturerService from './services/manufacturer'\n\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  }\n\n  return { items: sortedItems, requestSort };\n}\n\nconst parseAvailability = ({ json }) => {\n  if (json !== undefined) {\n    if (json.DATAPAYLOAD.includes('>INSTOCK<')) {\n      return 'In stock'\n    } else if (json.DATAPAYLOAD.includes('>OUTOFSTOCK<')) {\n      return 'Out of stock'\n    } else if (json.DATAPAYLOAD.includes('>LESSTHAN10<')) {\n      return 'Less than 10 in stock'\n    }\n  } else {\n    return 'No data available'\n  }\n\n}\n\nconst App = () => {\n  const [gloves, setGloves] = useState([])\n  const [beanies, setBeanies] = useState([])\n  const [facemasks, setFacemasks] = useState([])\n  const [filter, setFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n    if (event.target.value === ('')) setShowAll(true)\n    else setShowAll(false)\n  }\n\n  useEffect(() => {\n    async function renderGloves() {\n      const data = await itemService.getGloves()\n      setGloves(data)\n    }\n    async function renderFacemasks() {\n      const data = await itemService.getFacemasks()\n      setFacemasks(data)\n    }\n    async function renderBeanies() {\n      const data = await itemService.getBeanies()\n      setBeanies(data)\n    }\n\n    renderGloves()\n    renderFacemasks()\n    renderBeanies()\n  }, [])\n\n\n\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand as={Link} to=\"/\">Home</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/gloves\">Gloves</Nav.Link>\n            <Nav.Link as={Link} to=\"/facemasks\">Facemasks</Nav.Link>\n            <Nav.Link as={Link} to=\"/beanies\">Beanies</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Filter\" className=\"mr-sm-2\" value={filter} onChange={handleFilterChange} />\n\n          </Form>\n        </Navbar>\n      </div>\n      <Switch>\n        <Route path=\"/gloves/:id\">\n          <Glove gloves={gloves} parseAvailability={parseAvailability} />\n        </Route>\n        <Route path=\"/gloves\">\n          <Gloves gloves={gloves} filter={filter} showAll={showAll} useSortableData={useSortableData} />\n        </Route>\n        <Route path=\"/facemasks/:id\">\n          <Facemask facemasks={facemasks} parseAvailability={parseAvailability} />\n        </Route>\n        <Route path=\"/facemasks\">\n          <Facemasks facemasks={facemasks} filter={filter} showAll={showAll} useSortableData={useSortableData} />\n        </Route>\n        <Route path=\"/beanies/:id\">\n          <Beanie beanies={beanies} parseAvailability={parseAvailability} />\n        </Route>\n        <Route path=\"/beanies\">\n          <Beanies beanies={beanies} filter={filter} showAll={showAll} useSortableData={useSortableData} />\n        </Route>\n\n\n\n        <Route path=\"/\" >\n          <Jumbotron>\n            <h1>Warehouse application</h1>\n            <p>\n              This is a single page application, that fetches clothing products from an API and displays\n              said products in tables. This application doesn't have pagination.\n              It uses react-router so that user is able to switch easily from product category to another. It has built\n              in filtering and user is also able to sort tables by product name. The application should be pretty\n              responsive considering the fact that each product category has almost 8000 items. For each item in the tables, there is \n              a button from where user can check the availability of the item. The availability API is quite slow  to respond so it may take\n              10-30 seconds to get response from the server. This was also the reason why I chose to make calls to API only when user wanted \n              to check availabilty to avoid long response times.\n            </p>\n          </Jumbotron>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}